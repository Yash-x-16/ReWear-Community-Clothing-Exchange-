// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User{
  Id              Int              @default(autoincrement())@unique 
  username        String 
  email           String            @unique 
  password        String 
  Image           String?  
  item            Item[]
  points          Int                @default(0)
  sentSwaps   Swap[]      @relation("SenderSwaps")
  receivedSwaps Swap[]    @relation("ReceiverSwaps")
}

model Item{
 id          Int           @id @default(autoincrement())
  title       String
  description String
  category    String
  size        String
  condition   String
  tags        String[]
  available   Boolean       @default(true)
  isApproved  Boolean       @default(false)
  createdAt   DateTime      @default(now())
  images      itemImage[]
  userId          Int
  user            User           @relation(fields: [userId],references: [Id])
   offeredInSwaps   Swap[]       @relation("OfferedItem")
  requestedInSwaps Swap[]       @relation("RequestedItem")
} 


model itemImage{
  id    Int     @default(autoincrement())@unique
  url   String  
  itemId Int
  item    Item @relation(fields: [itemId], references: [id])
}

model Swap {
  id             Int      @id @default(autoincrement())
  senderId       Int
  receiverId     Int
  offeredItemId  Int
  requestedItemId Int?
  swapType       SwapType 
  status         SwapStatus
  createdAt      DateTime @default(now())

  sender         User     @relation("SenderSwaps", fields: [senderId], references: [Id])
  receiver       User     @relation("ReceiverSwaps", fields: [receiverId], references: [Id])

  offeredItem    Item     @relation("OfferedItem", fields: [offeredItemId], references: [id])
  requestedItem  Item?    @relation("RequestedItem", fields: [requestedItemId], references: [id])
}

// ENUMS
enum SwapType {
  DIRECT
  POINTS
}

enum SwapStatus {
  PENDING
  ACCEPTED
  REJECTED
  COMPLETED
}